defaults:
  - override /hydra/sweeper: optuna
  # - override /logger: mlflow.yaml
  - override /callbacks: checkpoint.yaml

optimized_metric: pixelwize_auroc

# here we define Optuna hyperparameter search
# it optimizes for value returned from function with @hydra.main decorator
# docs: https://hydra.cc/docs/next/plugins/optuna_sweeper
hydra:
  sweeper:
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper

    # storage URL to persist optimization results
    # for example, you can use SQLite if you set 'sqlite:///example.db'
    storage: null

    # name of the study to persist optimization results
    study_name: null

    # number of parallel workers
    n_jobs: 1

    # 'minimize' or 'maximize' the objective
    direction: "maximize"

    # total number of runs that will be executed
    n_trials: 100

    # choose Optuna hyperparameter sampler
    # docs: https://optuna.readthedocs.io/en/stable/reference/samplers.html
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 12345
      n_startup_trials: 5 # number of random sampling runs before optimization starts

    # define range of hyperparameters
    params:
      trainer.max_epochs: range(20, 100)
      datamodule.batch_size: choice(4, 8, 16)
      model.anomaly_threshold: range(0.1, 0.9)
      model.simplenet2d_cfg.projection_channel: choice(512, 748, 1024)
      model.simplenet2d_cfg.discriminator_layer_num: choice(2, 3)
      model.simplenet2d_cfg.discriminator_reduce_rate: range(1.0, 2.0)
      model.simplenet2d_cfg.patch_size: choice(2, 3)
      model.projection_optimizer_cfg.lr: range(0.00005, 0.001)
      model.projection_optimizer_cfg.weight_decay: range(0.0, 0.2)
      model.discriminator_optimizer_cfg.lr: range(0.0001, 0.001)
      model.noise_generator.noise_std: range(0.001, 0.1)
      model.noise_generator.noise_scaling: range(1.0, 2.0)
